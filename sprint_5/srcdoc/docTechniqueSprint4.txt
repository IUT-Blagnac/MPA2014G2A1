= Documentation SPRINT 4
:Author:  Groupe projet 2A1 Module MPA S3
:doctitle: Documentation Technique OPTI Sprint 4
:slideshowlocation: Your computer
:copyright: {date={localdate}}, {slideshowlocation} *** {author} *** Powered by AsciiDoc and W3C Slidy &#169; 
:revnumber: 5

include::docConf.txt[]

== Liste des membres

- Baverez Tristan
- Trille Jean-Sebastien
- Pinquier Victor 
- Larrouy Etienne
- Rivalier Antoine

== BackLog produit

*Les fonctionnalités initiales demandées sont les suivantes :*


. Liste des sujets de projet tutoré de l’année 
- Créer/Supprimer/Modifier un sujet 
- Lister les sujets avec filtres 

. Voeux des groupes d'étudiants 
- Définir des groupes d'étudiants
- Associer des étudiants à des groupes 
- Définir les voeux d’un groupe 
- etc

. Affectation des projets aux groupes d'étudiants 
- Définir (affectation) un sujet pour un groupe 
- Lister le nombre de voeux par rang pour un sujet 
- Lister pour un groupe le nombre de "concurrents" par rang de voeux
- Lister les projets affectés / non affectés 
- Lister les groupes affectés / non affectés
- Calcul automatique de pré-affectation "au mieux" sur un ensemble de groupes non affectés 
- etc

. Affectation des intervenants sur chaque projet tutoré
- Définir les intervenants d’un projet tutoré
- Lister les projets par intervenant
- Lister les intervenants par projet
- etc

== BackLog produit Sprint 4


En tant qu’internaute, je veux accéder à l’application OPTIweb.html depuis tout support fixe ou mobile

En tant qu’internaute, je veux pouvoir consulter les projets, les sujets, les étudiants et les intervenants dans des pages séparées


- Page Projets

En tant qu’internaute, je veux pour chaque projet en voir le nom, le titre, le client, le superviseur, le groupe et les étudiants réalisant le projet

En tant qu’internaute, je veux pouvoir rechercher un projet dans la liste des projets en fournissant une chaine de caractère quelconque


- Page Sujets

En tant qu’internaute, je veux pour chaque sujet en voir le nom, le titre et le ou les noms des groupes d'étudiants réalisant le sujet

En tant qu’internaute, je veux pouvoir rechercher un sujet dans la liste des sujets en fournissant une chaine de caractère quelconque

En tant qu’internaute, je veux pouvoir sélectionner un sujet et voir les projets réalisant le sujet


- Page Etudiants

En tant qu’internaute, je veux pour chaque étudiant en voir le nom, le prénom ainsi que son groupe

En tant qu’internaute, je veux pouvoir rechercher un étudiant dans la liste des étudiants en fournissant une chaine de caractère quelconque

En tant qu’internaute, je veux pouvoir sélectionner un étudiant et voir le projet qu’il réalise


- Page Intervenants

En tant qu’internaute, je veux pour chaque intervenant en voir le nom, le prénom ainsi que le nombre de ses interventions en tant que Client ou Superviseur

En tant qu’internaute, je veux pouvoir rechercher un intervenant dans la liste des intervenants en fournissant une chaine de caractère quelconque

En tant qu’internaute, je veux pouvoir sélectionner un intervenant et voir le(s) projet(s) où il intervient


== Fonctionnalités du Sprint 4



*Librairie :*

- fonction de lecture ainsi que d'écriture disponible

[NOTE]
====
Pour plus d'info : link:../doc/index.html[Java DOC ]
====


*Interface graphique*

- Onglet A propos das lequel se trouve toutes les informations relatives à la création de l'application.

image::aide.png[]

[NOTE]
====
L'onglet Aide est un objet de JMenuBar
====

- Afficher un liste (Etudiant, Intervenant, Sujet, Projet).

image::afficher.png[]

[NOTE]
====
Utilisation de la classe JTable et de la methode importDonnees() et read()
====

----
	
	/*
	 * Import des données, récupère les informations dans Save.txt
	 */
	public static void importDonnees() throws IOException{

		BufferedReader in = new BufferedReader(new FileReader("Data.csv"));

		String line = in.readLine(); 
		String [] donnees = line.split(",");
		int nbInd = Integer.parseInt(donnees[0]);
		int nbSuj = Integer.parseInt(donnees[1]);
		int nbGrp = Integer.parseInt(donnees[2]);
		
		System.out.print(donnees[0]);
		
		in.close();

	}
}
----

- Supprimer un item d'une liste

image::suppression.png[]

Utilisation de la méthode removeRow de la classe JTable.

----
	public void supprimer(){
		
		int confirmation = 0;
		
		if(donneeTab.getSelectedRows().length == 0){
			JOptionPane.showMessageDialog(null, "Vous n'avez rien sÃ©lectionnÃ©", "Attention", 
					JOptionPane.ERROR_MESSAGE); 
			confirmation = 1;
		}
		else{
			System.out.println(donneeTab.getSelectedRows()[0]);
			System.out.println(donneeTab.getSelectedRows()[donneeTab.getSelectedRows().length-1]);
			confirmation = JOptionPane.showConfirmDialog(this, "Voulez vous vraiment supprimer ?", "Suppression",
					JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);
			
			if(confirmation == 0){
				
				DefaultTableModel ModeleTemp = (DefaultTableModel)donneeTab.getModel();
				int i = 0;
				while(i < donneeTab.getSelectedRows().length)
				{
					ModeleTemp.removeRow(donneeTab.getSelectedRows()[i]);
				}
			
			}
		}
	}
----

[NOTE]
====
V2 : la table se mets à jour automatiquement !
====

- Ajouter un item dans une liste

image::ajout.png[]

[NOTE]
====
JOptionPane afin de réaliser les différentes saisies
====

[NOTE]
====
V2 : la table se mets à jour automatiquement !
====

- Sauvegarder vos modifications

image::sauvegarde.png[]

[NOTE]
====
JDialog pour les affichage de la liste de étudiant, intervenants...
====

- Affichage des groupes

image::affGroupe.png[]


- Affichage des Intervenants

image::affIntervenant.png[]

image::a_propos.png[]


- La page d'à propos est un objet héritant de la classe JDialog

[NOTE]
====
Screenshot
====

image::sauvegarde.png[]

- Afficher la liste des groupes

- Afficher la liste des projets


- Associer un intervenant a un projet

En selectionnant un intervenant, un groupe et un rôle vous pouvez faire une nouvelle association entre toutes ces données.

image::asso.png[]


*Version Web*

La version web de l'application est générée grâce au make.bat.
Une fois générée, le site web va vous permettre de :

- Afficher toutes les informations des projets (Etudiants, Sujets, Intervenant, Groupe)
- Rechercher des données grâce en fournissant une chaine de caractère
- Lier les données entre elles.

link:../OPTIweb/test/OPTIweb.html[OPTI Web]



== Liste des classes utilisées

*Pour L'interface*

- Groupe, Sujet, Projet, Etudiant, Intervenant

Ces classes permettent l'affichage des différentes données.


- APropos
Permets de créer et d'afficher le JDialog gérant le A Propos

- Interfacelog
Gère l'affichage principal et notamment le menu de l'application


*Site web*


Le site web est généré grâce à a classe MakeOPTIweb.java
et aux sous classes de la création pour chaque page de données(Etudiant, Groupe, Sujet, Projet, Intervenant)




== Diagramme des classes

image::diag0.png[]


== Documentation Java
  
link:../doc/index.html[Java DOC]